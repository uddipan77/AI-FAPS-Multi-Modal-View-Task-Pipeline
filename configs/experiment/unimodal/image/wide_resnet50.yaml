# @package _global_

# to execute this experiment run:
# python train.py experiment=mm_wideresnet_image

defaults:
  - override /data: linear_winding.yaml
  - override /model: multimodal.yaml
  - override /callbacks: default.yaml
  - override /trainer: default.yaml

tags: ["linear_winding", "mm_wideresnet", "image", "wideresnet"]

seed: 42

trainer:
  min_epochs: 1
  max_epochs: 100
  gradient_clip_val: 0.5

model:
  optimizer:
    lr: 0.0001
    weight_decay: 1e-5
  
  scheduler:
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau 
    _partial_: true
    mode: min
    factor: 0.1
    patience: 10 
  
  use_modalities:
    - images

  modal_nets:
    images:
      _target_: src.models.components.torchvision_wrapper.TorchVisionWrapper
      model_name: wide_resnet50_2
      weights: DEFAULT
      unfreeze_layer_count: 20

  modality_dummy_inputs:
    images:
      type: list
      length: 4
      shape: [4, 3, 320, 320]

data:
  batch_size: 8
  seed: ${seed}

logger:
  wandb:
    tags: ${tags}
    group: "linear_winding"
