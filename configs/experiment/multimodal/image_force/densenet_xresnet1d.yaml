
# @package _global_

# to execute this experiment run:
# python train.py experiment=mm_densenet_xresnet1d

defaults:
  - override /data: linear_winding.yaml
  - override /model: multimodal.yaml
  - override /callbacks: default.yaml
  - override /trainer: default.yaml

# All parameters below will be merged with parameters from default configurations set above
# This allows you to overwrite only specified parameters

tags: ["linear_winding", "mm_tiny", "image", "xresnet1d", "densenet" "batch1"]

seed: 42

trainer:
  min_epochs: 1
  max_epochs: 200
  gradient_clip_val: 0.5

model:

  optimizer:
    lr: 0.001
    weight_decay: 0.00001

  scheduler:
    factor: 0.1
    patience: 4

  use_modalities:
    - images
    - forces

  modal_nets:
    images:
      _target_: src.models.components.torchvision_wrapper.TorchVisionWrapper
      model_name: densenet121
      weights: DEFAULT
      unfreeze_layer_count: 100
      drop_rate: 0.065

    forces:
      _target_: tsai.models.XResNet1d.XResNet1d152  # Ensure the path is correct
      c_in: 1
      c_out: 32
      # You can uncomment and set activation if needed
      # activation: ReLU

  modality_dummy_inputs:
    images:
      type: list
      length: 4
      shape: [4, 3, 320, 320]
    forces: 
      type: list
      length: 5
      shape: [5, 1, 11524]

data:
  batch_size: 16
  train_transforms:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.CenterCrop
        size: 320
      - _target_: torchvision.transforms.ToTensor
      - _target_: kornia.augmentation.RandomGaussianNoise
        mean: 0.0
        std: 0.048
        same_on_batch: True
        keepdim: True
      - _target_: torchvision.transforms.RandomApply
        p: 0.5
        transforms:
          - _target_: torchvision.transforms.GaussianBlur
            kernel_size: 19
      - _target_: torchvision.transforms.Normalize
        mean:
          - 0.5
          - 0.5
          - 0.5
        std:
          - 0.5
          - 0.5
          - 0.5

logger:
  wandb:
    tags: ${tags}
    group: "linear_winding"
  aim:
    experiment: "mm_densenet_xresnet1d"
